initSidebarItems({"constant":[["APPEND","Force all writes to append data at the end of the file."],["ATOMIC","Inform the remote that an atomic rename operation is desired if available"],["CREATE","If this flag is specified, then a new file will be created if one does not already exist (if Truncate is specified, the new file will be truncated to zero length if it previously exists)"],["EXCLUSIVE","Causes the request to fail if the named file already exists. Using this flag implies the `Create` flag."],["NATIVE","Inform the remote end that the native system calls for renaming should be used"],["OVERWRITE","In a rename operation, overwrite the destination if it already exists. If this flag is not present then it is an error if the destination already exists"],["READ","Open the file for reading."],["TRUNCATE","Forces an existing file with the same name to be truncated to zero length when creating a file by specifying `Create`. Using this flag implies the `Create` flag."],["WRITE","Open the file for writing. If both this and Read are specified, the file is opened for both reading and writing"]],"enum":[["OpenType","How to open a file handle with libssh2."]],"struct":[["File","A file handle to an SFTP connection."],["FileStat","Metadata information about a remote file."],["OpenFlags","Options that can be used to configure how a file is opened"],["RenameFlags","Options to `Sftp::rename`"],["Sftp","A handle to a remote filesystem over SFTP."]]});